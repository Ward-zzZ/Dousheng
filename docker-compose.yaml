version: "3.7"

x-minio-common:
  &minio-common
  image: minio/minio
  command: server --console-address ":9001" http://minio{1...4}/data
  expose:
    - "9000"
  environment:
    - MINIO_ACCESS_KEY=tiktok
    - MINIO_SECRET_KEY=12344321
  healthcheck:
    test:
      [
        "CMD",
        "curl",
        "-f",
        "http://localhost:9000/minio/health/live"
      ]
    interval: 30s
    timeout: 20s
    retries: 3

services:

  minio1:
    <<: *minio-common
    hostname: minio1
    ports:
      - "9001:9001"
    volumes:
      - ./data/minio/data1:/data

  minio2:
    <<: *minio-common
    hostname: minio2
    ports:
      - "9002:9001"
    volumes:
      - ./data/minio/data2:/data

  minio3:
    <<: *minio-common
    hostname: minio3
    ports:
      - "9003:9001"
    volumes:
      - ./data/minio/data3:/data

  minio4:
    <<: *minio-common
    hostname: minio4
    ports:
      - "9004:9001"
    volumes:
      - ./data/minio/data4:/data
  # 使用nginx反向代理9000端口，在4个Minio实例间实现负载均衡,通过9001、9002、9003、9004端口访问它们的web console
  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./data/configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

  # MySQL
  mysql:
    image: mysql:latest
    volumes:
      - ./data/data/mysql:/var/lib/mysql
      - ./data/configs/sql:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=tiktok
      - MYSQL_ROOT_PASSWORD=123456
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6378:6379"
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ./data/data/redis:/data
      - ./data/logs/redis:/logs
    command: redis-server --requirepass tiktok123

  # Consul
  consul:
    image: consul:latest
    command: agent -dev -client=0.0.0.0
    ports:
      - "8500:8500"
      - "8300:8300"
      - "8301:8301"
      - "8302:8302"
      - "8600:8600/udp"

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=tiktok
      - RABBITMQ_DEFAULT_PASS=123321

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib-dev:latest
    command:
      [
        "--config=/etc/otel-collector-config.yaml",
        "${OTELCOL_ARGS}"
      ]
    volumes:
      - ./data/configs/otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888" # Prometheus' metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "55679" # zpages extension
    depends_on:
      - jaeger-all-in-one

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"
      - "14268"
      - "14250:14250"
      - "6831:6831"

  # VictoriaMetrics
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics
    ports:
      - "8428:8428"
      - "8089:8089"
      - "8089:8089/udp"
      - "2003:2003"
      - "2003:2003/udp"
      - "4242:4242"
    command:
      - '--storageDataPath=/storage'
      - '--graphiteListenAddr=:2003'
      - '--opentsdbListenAddr=:4242'
      - '--httpListenAddr=:8428'
      - '--influxListenAddr=:8089'
    restart: always

  # Grafana
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
