syntax = "proto3";

package MessageServer;

option go_package = "MessageServer";

message User {
    int64 id = 1; // 用户id
    string name = 2; // 用户名称
    int64 follow_count = 3; // 关注总数--可选
    int64 follower_count = 4; // 粉丝总数--可选
    bool is_follow = 5; // true-已关注，false-未关注
}

message BaseResp {
    int32 status_code = 1; // 状态码，0-成功，其他值-失败
    string status_msg = 2; // 返回状态描述--可选
}

message ChatMessage {
  int64 id = 1;       // 消息id
  int64 to_user_id = 2; // 该消息接收者的id
  int64 from_user_id = 3; // 该消息发送者的id
  string content = 4; // 消息内容
  int64 create_time = 5;      // 消息创建时间
}

//Message--chat
message DouyinMessageChatRequest {
    int64 user_id = 1; // 我方用户id
    int64 to_user_id = 2;// 对方用户id
    int64 pre_msg_time=3;//上次最新消息的时间
}
message DouyinMessageChatResponse {
    BaseResp base_resp = 1;
    repeated ChatMessage chat_list = 2; // 聊天消息列表
}

//message--action
message DouyinMessageActionRequest {
    int64 user_id = 1; // 我方用户id
    int64 to_user_id = 2;// 对方用户id
    int32 action_type = 3;// 1-发送消息，2-删除消息
    string content = 4;// 用户填写的消息内容，在action_type=1的时候使用
}
message DouyinMessageActionResponse {
    BaseResp base_resp = 1;
}

//message--latestMsg
message DouyinMessageLatestMsgRequest {
    int64 user_id = 1; // 我方用户id
    repeated int64 to_user_id_list = 2;// 对方用户id列表
}
message DouyinMessageLatestMsgResponse {
    BaseResp base_resp = 1;
    repeated int32 type_list = 2;// 0 发送消息，1 接收消息
    repeated string content_list = 3;// 最新消息内容
}

service MessageService {
    rpc MessageChat (DouyinMessageChatRequest) returns (DouyinMessageChatResponse) {}
    rpc MessageAction (DouyinMessageActionRequest) returns (DouyinMessageActionResponse) {}
    rpc MessageLatestMsg (DouyinMessageLatestMsgRequest) returns (DouyinMessageLatestMsgResponse) {}
}
